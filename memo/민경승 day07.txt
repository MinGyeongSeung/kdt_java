day07(java 5일차)
복습 -> 제어문(반복문, 기타제어문), 이중 반복문

0. 복습
1) 연산자
	최 단 산 쉬 관 리 삼 대

- 단항연산자
	+, -, ++, --, !

- 산술연산자
	+ - * / %
	정수 + 정수 = 정수
	정수 + 실수 = 실수
	실수 + 실수 = 실수

- 쉬프트연산자(비트)
	좌쉬프트 A << B
	우쉬프트 A >> B
	Logical 쉬프트 A >>> B	부호 무시하고 오른쪽으로 이동

- 관계연산자
	<, >, <=, >=, ==, !=
	결과는 boolean타입으로 나온다!

- 논리연산자
	&&, ||, !
	true & true

	& | ^ ~
	1010 & 1011	=> 1010
	1010 | 1011	=> 1011
	1010 ^ 1011	=> 0001
	~1010	->  ~10 => -11

- 삼항연산자
	조건식? 참일 때의 값 : 거짓일 때의 값

- 대입연산자

2) 조건문
	if문, switch문

	if~else if~else문
	if (조건식) {
		조건식1이 참일 때 실행될 문장;
	}else if (조건식2){
		조건식1이 거짓이고 조건식 2가 참일 때 실행될 문장;
	}else{
		조건식1, 조건식2가 모두 거짓일 떄 실행될 문장;
	}

- switch문
	switch (값) {
	case 값1:
		값1과 같을 때 실행할 문장;
		break;
	case 값2:
		값2과 같을 때 실행할 문장;
		break;
	case 값3:
		값3과 같을 때 실행할 문장;
		break;
	default:
		위의 case의 값과 모두 같지 않을 때 실행할 문장;
		break
	}


1. 반복문
	특정 조건을 만족할 때까지 코드 블록을 반복 실행

1) for문
	반복 횟수가 정해져있을 때 주로 사용

	for(초기식; 조건식; 증감식){
		조건식이 true일 동안 실행
	}

	초기식 : 처음에 설정할 값(변수)	=> int i = 0;
	조건식 : 조건식의 결과가 true면 중괄호 영역안의 문장을 실행
		false면 중괄호 영역을 들어가지 않고 for문 탈출
	증감식 : 값을 얼마나 증감할지 정하는 식 => i++

2) while문
	조건식이 참인 동안 반복한다
	실행 중에 조건식이 거짓이 되어야 무한루프(무한반복) 에 빠지지 않는다

	while (조건식) {
		조건식이 참일 동안 실행할 문장;
	}

3) do~while문
	while문과 동일하지만 최소 한 번은 무조건 실행해야 할 때 사용한다

	do {
		실행할문장;
	}while(조건식);
	


2. 기타제어문
	반복문에서 주로 사용한다
	단, break문은 switch문에서도 사용한다

1) break문
	즉시 해당 중괄호 영역을 탈출한다
	break문 아래 코드를 스킵한다(실행하지 않는다)

2) continue
	즉시 다음 반복으로 넘어간다 (중괄호영역 스킵한다)
	continue문 아래 코드를 스킵한다(실행시키지 않는다)


[실습] 패키지 : homework07

//1 ~ 5번 클래스명 : Review01
1. 한 개의 정수를 입력받아 짝수인지 홀수인지 출력하기(삼항 연산자 이용)

2. 한개의 정수를 입력받아 양수, 음수, 0인지 출력하기(조건문)

3. 나이를 입력받아서 다음 기준으로 출력하기
   0 ~ 12   : 어린이입니다
   13 ~ 19 : 청소년입니다
   20 이상 : 성인입니다

   나이입력 : 16
   현재 나이는 16살이고 청소년입니다

4. 세 개의 정수를 입력받아 가장 작은 숫자부터 큰 숫자 순으로 정렬하여 출력하기
   단, 세 개의 정수는 모두 다른 숫자이어야한다(중복값 X)
   
   숫자 3개 입력 :  5 1 9
   정렬된 숫자 : 9 5 1

5. 사용자가 문자열을 입력받고 "X"만 입력했을 경우에만 종료 메시지 출력하고 그 외에는 입력한 문자열을 출력하기
   
//6번 클래스명 : AtmTest
6. ATM 메뉴에서 입금, 출금, 잔액조회 하기
   [조건]
   초기 잔액은 10000원으로 설정
   메뉴 선택에 따라 작업 수행
   종료시 프로그램 종료
   숫자(번호)로 입력받기

   String msg ="\nATM 기기의 메뉴 중 번호를 선택하세요."
      + "\n1. 잔액조회"
      + "\n2. 입금"
      + "\n3. 출금"
      + "\n4. 종료"
      + "\n선택 : ";
      System.out.println(msg);
   그 외의 번호 입력시 다시 선택하세요 출력 후 메뉴 보이기
   번호 입력시 해당 메시지만 출력

//7번 SingTest
7. 코인 노래방 시스템을 구현하는 개발자입니다.
사용자로부터 금액을 입력받아 부를 수 있는 곡 수와 잔돈을 계산하고, 음료를 마실 수 있는지 여부도 안내하는 프로그램

[요구사항]
사용자에게 곡 당 가격을 입력받는다.
반복문을 사용하여 사용자에게 금액을 계속 입력받는다.
단, 0을 입력하면 프로그램은 종료된다.
입력받은 금액으로 부를 수 있는 곡 수와 잔돈을 출력한다.
곡 수 : 금액 ÷ 곡당 가격
보너스 : 5곡당 1곡 보너스 (예: 5곡 → 6곡, 10곡 → 12곡)
잔돈 : 금액 % 곡당 가격
음료(100원)를 마시고 싶다면, 음료 가격을 차감하고 노래를 줄이는 방식으로 대체 제안을 출력한다.
사용자에게 "음료를 구매하시겠습니까?" 라고 묻고
YES를 입력하면 대체 결과를 출력 NO를 입력하면 원래 계산된 노래 수를 유지한다
금액이 부족할 경우, 노래를 부를 수 없다는 안내 메시지를 출력한다.

입력은 정수로 받되, nextLine() 사용하여 입력 오류를 방지한다.
대소문자 구분해서 YES/NO 처리한다.
Scanner는 한 번만 생성하고 마지막에 .close()로 닫을 것

[입출력 예시]
곡 당 가격 입력: 300
금액 입력 (0 입력 시 종료): 1000
3곡을 부를 수 있으며 잔돈은 100원입니다
음료를 마시고 싶으면 3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 구매하시겠습니까? (YES/NO): YES
음료를 구매하셨습니다.
3곡을 부를 수 있으며 잔돈은 0원입니다
금액 입력 (0 입력 시 종료): 900
3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 마시고 싶으면 2곡을 부를 수 있으며 잔돈은 200원입니다
음료를 구매하시겠습니까? (YES/NO): YES
음료를 구매하셨습니다.
2곡을 부를 수 있으며 잔돈은 200원입니다
금액 입력 (0 입력 시 종료): 900
3곡을 부를 수 있으며 잔돈은 0원입니다
음료를 마시고 싶으면 2곡을 부를 수 있으며 잔돈은 200원입니다
음료를 구매하시겠습니까? (YES/NO): NO
음료를 구매하지 않았습니다.
금액 입력 (0 입력 시 종료): 0

===============================================================================

package review;
//1번 : 연산자 복습
public class Oper {
   public static void main(String[] args) {
      int num1 = -4;
      System.out.println(num1 >> 1);
      System.out.println(num1 >>> 1);
      System.out.println(Integer.toBinaryString(-4));
      System.out.println(Integer.toBinaryString(-4 >>> 1));
   }
}


===============================================================================

package review;

import java.util.Scanner;

public class SingTask04 {
   public static void main(String[] args) {

//      남은 금액으로 음료 구매 가능 여부 추가(한 곡당 금액 200원, 음료 금액은 100원)
//      총 부른 곡 수에 따른 보너스 곡 지급
//      5곡을 부르면 1곡 추가 제공

      // 1) 입력클래스 import
      Scanner sc = new Scanner(System.in);
      // 2) 정수형 상수 2개 선언, 정수형 6개 선언(금액입력, 노래곡수, 잔돈, 음료마실경우노래곡수, 음료마실경우잔돈, 보너스곡)
      final int PRICE = 200, PRICE_DRINK = 100;
      int money = 0, song = 0, change = 0, drinkSong = 0, drinkChange = 0, bonus = 0;
      // 3) 입력 메시지 출력
      System.out.println("금액 입력 : ");
      // 4) 금액입력 = 금액 입력 nextInt()
      money = sc.nextInt();
      // 5) 노래곡수 = 금액 / 상수1
      song = money / PRICE;
      // 6) 잔돈 = 금액 % 상수1
      change = money % PRICE;
      drinkSong = song - 1;
      // 7) 출력(몇곡 부를수있으며 잔돈은 얼마입니다)
      System.out.printf("%d곡을 부를 수 있고 잔돈은 %d원입니다.\n", song, change);

      // +) if 음료금액보다 잔액이 크거나 같을 경우
      if (change >= PRICE_DRINK) {
         System.out.printf("음료를 마시고 싶으면 %d곡을 부를 수 있으며 잔돈은 %d원 입니다.\n", song, change - PRICE_DRINK);
         // 8) 음료를 위해 한 곡 줄이는 경우
         //else if(노래곡수 > 0) && (금액 - ((노래곡수 - 1) * 노래가격)) >= 음료금액)){
      } else if (song > 0 && (money - (drinkSong * PRICE)) >= PRICE_DRINK) {
         // 9) 음료마실경우 노래곡수 = 노래곡수 - 1;
//         drinkSong = song - 1;
         // 10) 음료마실경우 잔돈 = 금액 - (음료마실경우노래곡수 * 노래가격 + 음료금액)
         drinkChange = money - (drinkSong * PRICE + PRICE_DRINK);
         System.out.printf("음료를 마시고 싶으면 %d곡을 부를 수 있으며 잔돈은 %d원입니다\n", drinkSong, drinkChange);
         // }
      }
      // 11) 보너스 곡 제공
      // 보너스곡 = 노래곡수 / 5;
      // 12) if(보너스곡 > 0){
      // 보너스로 몇곡이 추가되어 총 몇곡을 부를수있습니다
      // }
      bonus = song / 5;
      if(bonus > 0) {
         System.out.printf("보너스로 %d곡이 추가되어 총 %d곡을 부를 수 있습니다\n", bonus, song + bonus);
      }
      
      // +) sc.close()
      sc.close();
   }
}

===============================================================================

package review;

import java.util.Scanner;

//3) 복습문제
public class Review01 {
   public static void main(String[] args) {
      //사용자로부터 입력받은 숫자가 1부터 10까지의 숫자인 경우에만 해당 숫자의 제곱을 출력하고 
      //그 외 숫자를 입력시에는 잘못 입력했습니다 출력하기
      
      //한글로만 로직구성
      //1) 입력클래스 import
      //2) 정수형 변수
      //3) 출력 메시지
      //4) 변수 정수형 입력메소드
      //5) if 조건식 1 <= 변수 && 변수 <= 10 , 0 < 변수 && 변수 < 11
         //6) 변수 * 변수 출력
      //7) else
         //8) 잘못입력했습니다 출력
      //9) sc.close();
      
      Scanner sc = new Scanner(System.in);
//      int num = 0;
//      System.out.println("1부터 10사이의 숫자만 입력하세요");
//      num = sc.nextInt();
//      if ( 1 <= num && num < 11) {
//         System.out.println(num * num);
////         System.out.println(num * 2);
//      } else {
//         System.out.println("잘못 입력했습니다.");
//      }
      
      //문자열끼리의 비교는 관계연산자(==)를 사용하지 않고
      //.equals() 메소드를 사용해서 비교한다!!!
      System.out.println("문자열1 입력 : ");
      String data1 = sc.nextLine();
      System.out.println("문자열2 입력 : ");
      String data2 = sc.nextLine();
      System.out.println(data1 == data2); 
      System.out.println(data1.equals(data2)); //true
      if(data1.equals(data2)) {
         System.out.println("두 문자열 같습니다");
      }else {
         System.out.println("두 문자열은 같지 않습니다");
      }
      
      sc.close();
      
   }
}

===============================================================================

package forTest;
//4번 : for문 기초
public class ForTest01 {
   public static void main(String[] args) {
      
      //for(초기식; 조건식; 증감식) {}
//      for(int i = 0; i < 10; i++) {
//         //정수형 i가 0일 때부터 10보다 작을 때까지 i를 1씩 증가시키면서 반복
//         System.out.println(i +"번 행복하다!");
////         break;
//      }
//      
//      for(int i = 1; i < 10; i++) {
//         System.out.println(i);
//      }
      
      //이름 10번 출력
      //초기식 i = 0;
      //조건식
      //증감식
      //출력 => 1번 000
      //      2번 000
      //      10번 000
      for(int i = 0; i < 10; i++) {
         System.out.println((i+1) + "번 김영선");
      }
      
      //for문 사용
      //for 초기식   => int i = 10   int i = 0   int i = 1
      //   조건식   => i > 0      i < 10      i <= 10      i < 11
      //   증감식   => i--         i++         i++
      //출력      i 번째         10 - i 번째   11 - i 번째
      
      for(int i = 10; i > 0; i--) {
         System.out.print(i + "번째\t");
      }
      System.out.println();

      for(int i = 0; i < 10; i++) {
         System.out.println(10 - i + "번째");
      }
      
      //첫번째 반복문
      //초기식 i = 0   조건식 0 < 10 true   중괄호   10 - 0이므로 10번째 출력   증감식 i++
      //현재 i = 1로 증가
      
      //두번째 반복문
      //         조건식   1 < 10 true      중괄호   10 - 1이므로 9번째 출력      증감식 i++
      //현재 i = 2로 증가
      
      //세번째 반복문
      //         조건식   2 < 10 true      중괄호    10 - 2이므로 8번째 출력
      
      System.out.println(1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10);
      
      int result = 0;
      for(int i = 1; i <= 10; i++) {
         //총합 저장할 변수
         result += i;   //result = 1 + 2;
      }
      System.out.println(result);
      
   }
}

===============================================================================
package forTest;

import java.util.stream.IntStream;

//5번 : for문
public class ForTest02 {
   public static void main(String[] args) {

      // 1부터 100까지 수 중에서 짝수만 출력
      // 초기식 int i = 1
      // 조건식 i <= 100 or i < 101
      // 증감식 i++
      // {if (i % 2 == 0){
      // syso(i)
      // }
      // }

      // 1) for문과 if문 사용
      for (int i = 1; i <= 100; i++) {
         if (i % 2 == 0) {
            System.out.print(i + " ");
         }
      }
      System.out.println();
      // 2) for문의 조건식을 50으로 사용
      for (int i = 0; i < 50; i++) {
         System.out.print((i + 1) * 2 + " ");
      }
      System.out.println();
      // 3) for문의 초기식을 2로 사용하여 증감식 변경
      for (int i = 2; i <= 100; i += 2) {
         System.out.print(i + " ");
      }

      // Q. 1부터 100까지의 수 중에서 짝수의 합만 구하기
      // 1) 총합구할 변수 선언
      // 2) for문() 방법3 방법2 방법1
      // 초기식 int i = 2 int i = 1 int i = 0
      // 조건식 i <= 100 i <= 50 i <= 100
      // 증감식 i += 2 i++ i++
      // { 조건문(i % 2 == 0){변수 += i;}
      // 3) 최종 출력 짝수의 합 :
      System.out.println();
      // 방법1)
      int total = 0;
//      for(int i = 0; i <= 100; i++) {
//         if(i % 2 == 0) {
//            System.out.print(i + " ");
//            total += i;
//         }
//      }
//      System.out.println("짝수의 총합 : " + total);

      // 방법2)
//      for(int i = 1; i <= 50; i++) {   
////         System.out.println(i * 2);
//         total += i * 2; //total = total + i * 2
//      }
//      System.out.println(total);

      // 방법3)
      for (int i = 2; i <= 100; i += 2) {
//         System.out.println(i);
         total += i;
      }
      System.out.println(total);

      // 방법4) for문 사용하지 않기
      int num = 50;
      int sum = 2 * (num * (num + 1)) / 2;
      System.out.println(sum);

   }
}

===============================================================================

package forTest;
//6번 : for문 연습
public class ForTask01 {
   public static void main(String[] args) {
      //for문만 사용
      //1. 100부터 1까지 출력(tab키로 띄어쓰기)
//      for (   초기식 int i = 0;
//            조건식 i < 100;
//            증감식 i++)
//      100 - i 출력

      for (int i = 0; i < 100; i++) {
         System.out.print(100 - i + "\t");
      }
      System.out.println();
      //2. 구구단 3단만 출력(3 x 1 ~ 3 x 9까지)
      
      //1) 변수선언(단을 설정할)
      //2) for문(1부터 9까지 곱해질 내용을 반복문으로 만들기)
      //      초기식 int i = 1   
      //      조건식 i < 10
      //      증감식 i++
      //3) 출력   단 x i = 결과 형태로 출력
      int dan = 3;
      for(int i = 1; i < 10; i++) {
         System.out.println(dan + " x " + i + " = " + (dan * i));
      }
      
      //3. A ~ F 출력(초기식 char i = 'A')
      for(char i = 'A'; i <= 70; i++ ) {
         System.out.print(i + " ");
      }
      System.out.println();
      for(char i = 'A'; i <= 'F'; i++ ) {
         System.out.print(i + " ");
      }
      System.out.println();
      //4. A ~ F 출력(초기식 int i = 0)
      for(int i = 0; i < 6; i++) {
         System.out.println((char)(i + 65));
      }
      
      //5. aBcDeFgHiJkLmNoPqRsTuVwXyZ
      //홀수 => 소문자
      //짝수 => 대문자
      for(int i = 0; i < 26; i++) {
         if(i % 2 == 0) {
            System.out.print((char)(i + 97));
         }else {
            System.out.print((char)(i + 65));
         }
      }
      System.out.println();
      for(int i = 0; i < 26; i++) {
         System.out.print((char)(i % 2 == 0 ? i + 97 : i + 65));
      }
      
      //첫번째 반복문
      //초기식 i가 0, 조건식 0 < 26 true, 중괄호영역 (char)(97) => a, 증감식 i++ => i = 0 + 1
      //현재 i의 값 1
      //      조건식 1 < 26 true, 중괄호영역 (char)(1 + 65) => (char)66 => B, 증감식 i++ => i = 1 + 1
      //현재 i의 값 2
      //      조건식 2 < 26 true
      //..
      //현재 i의 값 25
      //   조건식 25 < 26   true, 중괄호 영역 (char)(25 % 2 == 0 false, 25 + 65) => (char)91, 증감식 i++ => 25 + 1
      //현재 i의 값 26
      //   조건식 26 < 26    false,    for문 탈출!
      
   }
}

===============================================================================

package forTest;

// 7번 : for문과 기타제어문
public class ForTest03 {
   public static void main(String[] args) {

      // 1부터 10까지 출력하기
//      for(int i = 1; i <= 10; i++) {
//         System.out.println(i);
//      }

      // 1부터 10까지 중 5까지만 출력하기
//      for(int i = 0; i <= 9; i++) {
//         System.out.println(i + 1);
//         if(i == 4) {
//            break;
//         }
//         System.out.println("출력끝");
//      }

      // 1부터 10까지 중 5만 제외하고 출력하기
      for (int i = 0; i < 10; i++) {
         if (i == 4) {
            continue;
         }
         System.out.println(i + 1);
      }

   }
}

===============================================================================

package whileTest;
//8번 : while문 기초
public class WhileTest01 {
   public static void main(String[] args) {
      
      //안녕하세요 문자열을 10번 출력하기
      //조건식을 true로 작성시 무한루프에 빠진다
      while(true) {
         for(int i = 0; i < 10; i++) {
            System.out.println("안녕하세요!");
         }
         break;
      }
      
      //변수 선언
      //while(조건식){}
      int cnt = 0;
      while(cnt < 10) {
//         System.out.println(cnt); //증감식이 출력문 다음에 작성되면 0 ~ 9까지 출력
         cnt++; //cnt = cnt + 1;
//         System.out.println(cnt); //증감식이 출력문 전에 작성되면 1 ~ 10까지 출력
         System.out.println("안녕하세요");
      }
      
      
   }
}


===============================================================================

package whileTest;
//9번 : while문 활용한 합계 구하기
public class WhileTest02 {
   public static void main(String[] args) {
      //1부터 100까지 합 구하기(for문 이용)
      //1) 총합 구할 변수 선언
      //2) for문    (초기식    int i = 1
      //         조건식   i <= 100
      //         증감식   i++ 
      //3) 중괄호 영역
      //      총합구할변수 += i   총합구할변수 = 총합구할변수 값 + i
      //4) 출력
      int result1 = 0;
      for(int i = 1; i <= 100; i++) {
         result1 += i;
      }
      System.out.println("1부터 100까지의 합(for문) : " + result1);
      
      //짝수의 합, 홀수의 합 추가적으로 구하기
      //1부터 100까지의 합을 구하기(while문 이용)
      //1) 변수 선언 2개(총합구할변수, 비교대상 변수 0)
      //+)   변수 2개 더 선언(짝수의 합, 홀수의 합 구할 변수)
      //2) while문   (조건식    비교대상변수 <= 100)
      //3) while중괄호영역
      //      총합구할변수 += 비교대상변수
      //+)   짝수 구할 조건문(if ~ else문)
      //      if(조건식 cnt % 2 == 0){
      //         짝수총합구할변수 += cnt;
      //      }else{
      //         홀수총합구할변수 += cnt;
      //      }      
      //      비교대상변수 1증가
      //4) 출력
      
      int result2 = 0, cnt = 0, even = 0, odd = 0;
      while(cnt <= 100) {
         result2 += cnt;
         if(cnt % 2 == 0) {
            even += cnt;
         }else {
            odd += cnt;
         }
         cnt++;
      }
      System.out.println("1부터 100까지의 합(while문) : " + result2);
      System.out.println("1부터 100까지의 짝수의 합 : " + even);
      System.out.println("1부터 100까지의 홀수의 합 : " + odd);
      
   }
}

===============================================================================

package whileTest;
// 10번 : while문 예제
public class WhileTest03 {
   public static void main(String[] args) {
      
      //2개의 정수를 입력받아서 두 정수의 합을 출력
      //0을 입력하면 종료, 1을 입력하면 계속 반복
      //while문 사용
      //기타제어문 사용
      
      //1) 정수형 변수 2개 선언(두 정수 합 구할 변수, 종료/반복 입력받을 변수)
      //2) 반복문 while 무한반복(true)
      //3) while 중괄호 영역 {
      //      3-1) 입력메시지출력
      //      3-2) 변수2개 선언 입력메소드 입력받기
      //      3-3) 두 정수 합 구할변수 덧셈연산
      //      3-4) 두정수의 합 출력
      //      3-5) 종료/계속할 지 출력 메시지
      //      3-6) 종료/반복 입력받기
      //      4) 조건문 if 종료라면 == 0{
      //      4-1)   종료 메시지 출력
      //      4-2)   break; }
      //      5) 조건문 if 계속이라면 == 1 {
      //      5-1)    계속 진행합니다 메시지 출력
      //      5-2)   continue; 
      //         }
      //      5-3)   프로그램 출력
      // }
      //반복문을 종료합니다
   }
}

===============================================================================

package whileTest;

import java.util.Scanner;

// 10번 : while문 예제
public class WhileTest03 {
   public static void main(String[] args) {

      // 2개의 정수를 입력받아서 두 정수의 합을 출력
      // 0을 입력하면 종료, 1을 입력하면 계속 반복
      // while문 사용
      // 기타제어문 사용

      // 1) 정수형 변수 2개 선언(두 정수 합 구할 변수, 종료/반복 입력받을 변수), 입력클래스 import
      // 2) 반복문 while 무한반복(true)
      // 3) while 중괄호 영역 {
      // 3-1) 입력메시지출력
      // 3-2) 변수2개 선언 입력메소드 입력받기
      // 3-3) 두 정수 합 구할변수 덧셈연산
      // 3-4) 두정수의 합 출력
      // 3-5) 종료/계속할 지 출력 메시지
      // 3-6) 종료/반복 입력받기
      // 4) 조건문 if 종료라면 == 0{
      // 4-1) 종료 메시지 출력
      // 4-2) break; }
      // 5) 조건문 if 계속이라면 == 1 {
      // 5-1) 계속 진행합니다 메시지 출력
      // 5-2) continue;
      // }
      // 5-3) 프로그램 출력
      // }
      // 반복문을 종료합니다
      // sc.close();

      int result = 0, choice = 0;
      Scanner sc = new Scanner(System.in);
      while (true) {
         System.out.println("2개의 정수 입력(입력시 1, 0 제외) : ");
         int num1 = sc.nextInt();
         int num2 = sc.nextInt();
         result = num1 + num2;
         System.out.println(num1 + " + " + num2 + " = " + result);
         System.out.println("계속 : 1, 종료 : 0을 누르세요 : ");
         choice = sc.nextInt();
         if (choice == 0) {
            System.out.println("종료");
            break;
         }
         if (choice == 1) {
            System.out.println("계속 진행합니다");
            continue;
         }
         System.out.println("프로그램");
      }
      System.out.println("반복문을 종료합니다");
      sc.close();
   }
}



===============================================================================

package whileTest;

import java.util.Scanner;

//11번 : do ~ while문
public class DoWhileTest {
   public static void main(String[] args) {

//      int i = 1;
//      while(i <= 3) {
//         System.out.println("i의 값 : " + i);
//         i++;
//      }
//
//      do {
//         System.out.println("i의 값 : " + i);
//         i++;
//      }while(i <= 3);

      // 사용자가 100보다 큰 수를 입력할 때까지 반복
      Scanner sc = new Scanner(System.in);
      int num;

      do {
         System.out.println("100보다 큰 수를 입력해야 반복문 탈출합니다.");
         System.out.println("숫자를 입력하세요 : ");
         num = sc.nextInt();
         System.out.println("입력한 수는 " + num + "입니다.");
      } while (num <= 100);
   }
}

===============================================================================
